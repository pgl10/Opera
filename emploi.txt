         
Opera est un programme qui permet d'effectuer les 5 opérations arithmétiques de base 
sur les nombres rationnels représentés par des fractions de deux entiers aussi grands 
que nécessaires. Il a deux modes de fonctionnement : l'exécution d'un fichier de commandes 
et le mode conversationnel. C'est un programme interactif qui lit, interprète, calcule et 
archive les résultats des instructions écrites selon les règles prévues et exposées ci-après.
         
Les nombres rationnels utilisés sont définis par une variable ayant un nom et une valeur. 
Le nom commence par une lettre et comporte seulement les caractères : lettres et chiffres 
auxquels on joint le caractère _ pour pouvoir indiquer un nom composé de plusieurs mots. 
Les lettres admises sont les 26 lettres minuscules et majuscules de l'alphabet seulement.
Ainsi, par exemple : Paris_Brest est un nom reconnu et utilisable. La valeur de chaque nombre 
rationnel est stockée en mémoire par deux entiers : le numérateur et le dénominateur aussi 
grands que nécessaires et ceux-ci sont réduits automatiquement sans aucun diviseur commun. 
Qui peut le plus, peut le moins : les calculs avec les nombres entiers sont possibles aussi 
et de même pour les calculs qui utilisent à la fois les entiers et les rationnels. Avec ce 
mode de représentation les calculs effectués sont mathématiquement exacts.
         
Pendant son exécution le programme gère les variables qui sont activées. Il n'est pas possible
de modifier directement la valeur d'une variable. Si on veut calculer et archiver plusieurs fois 
de suite la même variable il faut la supprimer avant chaque nouvel archivage. Mais on peut aussi 
en calculer plusieurs versions avec un suffixe servant de numéro d'ordre ou d'indice : ceci peut
être effectué en nommant successivement les variables de cette suite, exemple : v1, v2, ... 
Il existe aussi un moyen spécifique pour renommer une variable à l'aide de la valeur actuelle
entière positive ou nulle d'une autre variable connue, exemple : si n = 5 la variable v[n] est 
automatiquement renommée v5. Ce moyen de renommer une variable est bien utile dans un fichier de 
commandes pour lequel on veut utiliser cette variable dans une boucle pour obtenir ensuite une liste 
de variables qui seront archivées et conservées en tant que résultats pour la suite de la session. 
Il s'agit en fait d'une convention disponible partout, si m = 3 : 2+[m] est remplacé par 2+3 mais 
dans ce cas l'utilité de ce moyen n'est pas évidente. Quand la session est terminée les variables 
encore actives sont perdues, mais on peut avant cela les sauvegarder dans un fichier et les 
recharger ensuite.
         
Contrairement à la phase initiale si on veut quand même pouvoir modifier directement une variable
sans avoir la nécessité de la supprimer préalablement il faut effectuer l'instruction : modif = oui
et l'instruction : modif = non permet de rétablir le fonctionnement initial.
         
Le mode fichier de commandes est utilisable au début de la session par l'intermédiaire d'un 
fichier batch qui désigne le fichier des instructions à exécuter. Le mode conversationnel 
est automatiquement utilisé ensuite jusqu'à la fin de la session. Si on exécute seulement
le fichier opera.exe on commence directement en phase conversationnelle. L'utilisation d'un
fichier de commandes pendant la phase conversationnelle est tout à fait possible aussi.
Les lignes de commentaires commencent par # et tous les caractères y sont acceptés. Les
commentaires en fin de ligne de commande ne sont pas admis. Le caractère ' ' est pris en
compte après les mots-clés du langage : ilyatil, del, out, exec, convrt, nbch, ... mais
ailleurs il n'est pas pris en compte, il est même automatiquement supprimé. Un fichier de 
commandes peut en appeler un autre. Les noms des variables internes au fichier de commandes 
ne doivent pas être en conflit avec les noms des variables actives au moment de l'appel. Avec 
les débranchements conditionnels et les boucles itératives on peut aussi effectuer de véritables 
petits programmes de calculs arithmétiques exacts. Le fichier joint fonctions.txt en explique le 
fonctionnement. Pour assurer la lecture correcte de la dernière ligne utile d'un fichier commandes 
il convient de la faire suivre d'une et une seule ligne vide.
         
Opera reconnaît 7 opérateurs binaires ayant 2 opérandes et un opérateur ayant un seul opérande,
c'est l'opérateur - qui permet d'utiliser directement la valeur opposée de son argument. Les
sept opérateurs binaires sont : ^ / * - + < > et ils ont cet ordre de priorités. Ils permettent
d'élever à la puissance, de diviser, de multiplier, de soustraire, d'additionner et de comparer.
Les deux opérateurs - sont reconnus d'après le contexte où ils sont employés. Quand l'expression
arithmétique comporte plusieurs fois le même opérateur binaire le calcul est effectué de gauche
vers la droite. Les opérandes sont soit des entiers soit des nombres décimaux soit des variables 
contenant un nombre rationnel pouvant être fractionnaire ou entier et soit une expression valide
entre parenthèses. Voici des exemples commentés d'expressions arithmétiques valides pour Opera :  

> v           pour afficher la valeur actuelle de la variable v
> 2+3/4       pour afficher la valeur de cette expression arithmétique
> a = 3/7     pour créer la variable a avec cette fraction
> p = 3.14    pour créer la variable p avec ce nombre décimal
> x = a^2     calcul et archivage de a²
> y = b^n     la valeur de l'exposant doit être un entier ou un rationnel à valeur entière
> z = a>b     résultat : 1 si a>b, 0 si a=b et -1 si a<b
> t = a<b     résultat : 1 si a<b, 0 si a=b et -1 si a>b
> -5--7       résultat : 2 ( équivalent à : (-5)-(-7) )
> 1/2*3/4     résultat : 3/8 ( équivalent à : (1/2)*(3/4) )
> 3*(8-2)/2   résultat : 9 ( 3*6/2 = 3*3 = 9 )
> (a+5)/(n+1) dans cet exemple la division est effectuée après les additions
         
Opera permet l'emploi de parenthèses pour préciser ou modifier l'ordre des opérations effectuées.
Dans l'instruction x = a+b*c on effectue b*c en premier. Si on veut effectuer a+b en premier il faut 
faire x = (a+b)*c et on peut avoir des parenthèses sur plusieurs niveaux imbriqués. Les nombres 
décimaux utilisables ont un . et un seul qui n'est ni au début ni à la fin : 3.14 ou 3.0 ou 0.14 
sont valides mais 3. et .14 sont invalides. Les fichiers expressions.txt et exemples.bat complètent 
les explications relatives aux expressions arithmétiques valides ou invalides pour Opera.
        
La division par 0 est possible : i = 1/0 définit l'infini positif et j = -1/0 définit l'infini négatif. 
         
Dans l'instruction x^n pour calculer x élevé à la puissance n : l'exposant n doit être soit une constante 
entière soit une variable dont la valeur est un entier positif ou négatif. Il convient d'utiliser pour n 
une valeur qui ne soit pas excessive.
        
En complément des instructions de base ci-dessus expliquées il y a aussi les instructions suivantes :
> ilyatil v       résultat : 1 si la variable v existe et 0 si non
> del var         pour supprimer la variable var
> out sauv.txt    pour sauvegarder toutes les variables actuelles dans le fichier sauv.txt
> exec fic.txt    pour exécuter le fichier de commandes fic.txt
> convrt vr       pour convertir et afficher en nombre réel la variable vr
> convrt x/123    pour convertir et afficher en nombre réel cette expression arithmétique
> nbch vr         pour calculer et afficher le nombre de chiffres décimaux de la partie entière de vr
> enti vr         pour calculer et afficher la partie entière de la variable vr
> enti x*100000   pour calculer et afficher la partie entière de cette expression arithmétique
> frac vr         pour calculer et afficher la partie fractionnaire de vr ou d'une expression
> num vr          pour calculer et afficher le numérateur de la variable vr ou d'une expression
> den vr          pour calculer et afficher le dénominateur de la variable vr ou d'une expression
> pgcd e1,e2      pour calculer et afficher le pgcd de deux expressions à valeurs entières
> ppcm e1,e2      pour calculer et afficher le ppcm de deux expressions à valeurs entières
> prem e          résultat : 1 si l'expression ou le nombre entier e est premier et 0 si non
> ndiv e          pour calculer et afficher un facteur premier d'une expression à valeur entière
> liste           pour afficher toutes les variables actuelles
> aide            pour afficher un petit rappel des instructions utilisables
> exit            pour terminer la session
         
Avec la commande convrt on affiche en forme usuelle un nombre réel qui donne une bonne valeur 
approchée d'une variable ou d'une expression arithmétique. Mais si on veut voir un grand nombre 
de chiffres significatifs exacts obtenus il faut utiliser en complément la commande enti qui calcule 
et affiche la partie entière d'une variable ou d'une expression arithmétique. Selon les cas on pourra 
faire par exemples : enti v*1000 ou enti v*1000000 etc. Ce qui permet facilement d'afficher autant 
de chiffres significatifs que l'on veut.
         
Quand on calcule ou que l'on affiche une variable ou une expression il y a une variable particulière 
nommée last qui contient une copie du résultat. Il en est de même quand on affiche la valeur rélle 
d'une variable ou d'une expression avec la commande convrt. Et les commandes ilyatil, nbch, enti, frac, 
num, den, pgcd, ppcm, prem et ndiv ont aussi la même propriété avec la variable last. Si a et d sont 
deux variables ayant pour valeurs deux entiers, pour obtenir le quotient faire : enti a/d et : q = last 
et pour le reste : r = a-q*d.
         
La commande prem utilise la méthode de Miller et Rabin incluse dans GMP. Et la commande ndiv utilise
la méthode de l'algorithme rho de John M. Pollard qui est performante pour trouver un petit facteur 
premier. Il est possible mais extrêmement rare que l'algorithme rho soit en échec et dans ce cas le 
résultat est nul. Avec cette méthode simple qui a une durée d'exécution imprévisible il faut éviter
une recherche très difficile : pour information, le 7-ième nombre de Fermat 2^128 + 1 est le produit
de 2 nombres premiers ayant 17 et 22 chiffres décimaux et sur un PC avec un Intel i7 sa factorisation 
a duré 43 minutes. En pratique, il est préférable d'éviter de dépasser environ 17 chiffres décimaux 
pour le plus petit facteur premier à rechercher.
         
En phase conversationnelle on peut récupérer une instruction du passé récent avec la flèche <haut> 
du clavier puis l'exécuter identique ou modifiée. Dans certaines circonstances, une instruction 
invalide déclenche automatiquement l'affichage de l'aide.
         
Pour exécuter un fichier de commandes pendant la phase initiale il est commode de préparer deux 
fichiers comme le montre l'exemple joint : fichier.bat et fichier.txt
         
Il est souvent commode d'utiliser la fenêtre de la console Windows avec une hauteur assez grande. 
On peut l'obtenir avec la souris sur le bord inférieur ou bien avec le bouton <Agrandir>. 
Il y a une autre méthode plus complète pour l'effectuer : 
souris sur le bord supérieur et clic <droite> => Propriétés => Configuration => Taille de la fenêtre, 
ce qui permet aussi de faire d'autres réglages et de plus : Windows conservera ces réglages pour la 
prochaine fois, mais cela oblige à rétablir les réglages qu'on a modifiés si on ne veut pas les garder.
         