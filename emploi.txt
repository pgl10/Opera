         
Opera est un programme qui permet d'effectuer les 5 opérations arithmétiques de base 
sur les nombres rationnels représentés par des fractions de deux entiers aussi grands 
que nécessaires. Il a deux modes de fonctionnement : l'exécution d'un fichier de commandes 
et le mode conversationnel. C'est un programme interactif qui lit, interprète, calcule et 
archive les résultats des instructions écrites selon les règles prévues et exposées ci-après.
         
Le mode fichier de commandes est utilisable au début de la session par l'intermédiaire d'un 
fichier batch qui désigne le fichier des instructions à exécuter. Le mode conversationnel 
est automatiquement utilisé ensuite jusqu'à la fin de la session. Si on exécute seulement
le fichier opera.exe on commence directement en phase conversationnelle.
         
Les nombres rationnels utilisés sont définis par une variable ayant un nom et une valeur. 
Le nom commence par une lettre et comporte seulement les caractères : lettres et chiffres 
auxquels on joint le caractère _ pour pouvoir indiquer un nom composé de plusieurs mots. 
Ainsi, par exemple : Paris_Brest est un nom reconnu et utilisable. La valeur de chaque nombre 
rationnel est stockée en mémoire par deux entiers : le numérateur et le dénominateur aussi 
grands que nécessaires et ceux-ci sont réduits automatiquement sans aucun diviseur commun. 
Qui peut le plus, peut le moins : les calculs avec les nombres entiers sont possibles aussi 
et de même pour les calculs qui utilisent à la fois les entiers et les rationnels.
         
Pendant son exécution le programme gère les variables qui sont activées. Il n'est pas possible
de modifier directement la valeur d'une variable. Si on veut calculer et archiver plusieurs fois 
de suite la même variable il faut la supprimer avant chaque nouveau calcul, mais on peut aussi 
en calculer plusieurs versions avec un suffixe servant de numéro d'ordre. Quand la session est 
terminée les variables encore disponibles sont perdues, mais on peut avant cela les sauvegarder
dans fichier et les recharger ensuite.
         
Une ligne qui commence par : # est une ligne de commentaires. Il n'est pas admis de mettre 
des commentaires à la fin des instructions.
         
Les opérateurs + - * / ^ > < (additionner, soustraire, multiplier, diviser, puissance et comparer).
         
Voici une série d'exemples d'instructions de base qui sont reconnues et valides :
> a = 3/7   pour créer la variable a
> b = a+2
> c = b*b
> d = c-6
> q = a/b
> x = a^2   calcul de a²
> y = b^n   la valeur de l'exposant doit être un entier
> z = a>b   résultat : 1 si a>b, 0 si a=b et -1 si a<b
> z = a<b   résultat : 1 si a<b, 0 si a=b et -1 si a>b
> c         pour afficher la valeur actuelle de c
> 2*c       pour faire ce calcul et afficher le résultat
> 5-3       résultat : 2
> 5--3      résultat : 8 { 5 -(-3) }
> -5--7     résultat : 2
> x+y
> x+-y
> -x+y
> -x+-y     { (-x) + (-y) }
       
Les expressions arithmétiques admises comportent seulement un opérateur à deux arguments ayant
pour opérandes deux entiers ou bien un entier et une variable ou bien deux variables. Ainsi 
l'instruction : a = b + 3/7 n'est pas admise parce qu'elle comporte deux opérateurs binaires.
Le programme utilise aussi l'opérateur - à un seul argument qui définit la valeur algébriquement 
opposée d'un entier ou d'une variable et qui peut être utilisée seule ou comme opérande dans
une expression arithmétique. 
        
La division par 0 est possible : i = 1/0 définit l'infini positif et j = -1/0 définit l'infini négatif. 

Dans l'intruction x^n pour calculer x élévé à la puissance n : l'exposant n doit être soit une constante 
entière soit une variable dont la valeur est un entier positif ou négatif. Il convient d'utiliser pour n 
une valeur qui ne soit pas excessive.
        
En complément des instructions de base ci-dessus expliquées il y a aussi les instructions suivantes :
> del var         pour supprimer la variable var
> out sauv.txt    pour sauvegarder toutes les variables actuelles dans le fichier sauv.txt
> exec fic.txt    pour exécuter le fichier de commandes fic.txt
> conv vr         pour convertir et afficher en nombre réel la variable vr
> conv x/123      pour convertir et afficher en nombre réel cette expression arithmétique
> enti vr         pour calculer et afficher la partie entière de la variable vr
> enti x*100000   pour calculer et afficher la partie entière de cette expression arithmétique
> num vr          pour calculer et afficher le numérateur de la variable vr ou d'une expression
> den vr          pour calculer et afficher le dénominateur de la variable vr ou d'une expression
> liste           pour afficher toutes les variables actuelles
> aide            pour afficher un petit rappel de la syntaxe des instructions
> exit            pour terminer la session
         
On peut utiliser aussi un fichier de commandes pendant la phase conversionnelle.
         
Avec la commande conv on affiche en forme usuelle un nombre réel qui donne une bonne valeur 
approchée d'une variable ou d'une expression arithmétique. Mais si on veut voir un grand nombre 
de chiffres significatifs exacts il faut utiliser en complément la commande enti qui calcule et 
affiche la partie entière d'une variable ou d'une expression arithmétique. Selon les cas on pourra 
faire par exemples : enti v*1000 ou enti v*1000000 etc. Ce qui permet facilement d'afficher autant 
de chiffres significatifs que l'on veut.
         
Quand on calcule ou que l'on affiche une variable ou une expression il y a une variable particulière 
nommée last qui contient une copie du résultat. Il en est de même quand on affiche la valeur entière
d'une variable ou d'une expression. Exemple : enti var, varpe=last et varpf=var-varpe vont afficher
la partie entière de la variable var puis l'archiver puis archiver la partie fractionnaire de var.
Le résultat des instructions num et den est lui aussi disponible dans la variable last.
         
En phase conversationnelle on peut récupérer une instruction du passé récent avec la flèche <haut> 
du clavier puis l'exécuter identique ou modifiée. Dans certaines circonstances, une instruction 
invalide déclenche automatiquement l'affichage de l'aide.
         
Pour créer un fichier d'exécution avec une phase initiale de fichier de commandes il est commode 
de préparer deux fichiers comme le montre l'exemple joint : fichier.bat et fichier.txt
         
Il est souvent commode d'utiliser la fenêtre de la console Windows avec une hauteur assez grande. 
On peut l'obtenir avec la souris sur le bord inférieur ou bien avec le bouton <Agrandir>. 
Il y a une autre méthode plus complète pour l'effectuer : 
souris sur le bord supérieur et clic <droite> => Proriétés => Configuration => Taille de la fenêtre, 
ce qui permet aussi de faire d'autres réglages et de plus : Windows conservera ces réglages pour la 
prochaine fois, mais cela oblige à rétablir les réglages qu'on a modifiés si on ne veut pas les garder.
         
